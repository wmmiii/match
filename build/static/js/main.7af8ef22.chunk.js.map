{"version":3,"sources":["base/pieces.tsx","engine/state.ts","Piece.tsx","base/pieceTypes.ts","Board.tsx","engine/index.ts","base/generator.ts","base/moves.ts","base/matches.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["style","display","pieces","width","height","fill","xmlns","id","cx","cy","r","stroke","strokeWidth","d","strokeLinecap","strokeLinejoin","getCell","grid","x","y","column","setCell","object","old","forEachCell","action","parseInt","Piece","props","state","visible","window","setTimeout","setState","scale","this","color","left","top","icon","className","push","selected","destroyed","join","onMouseDown","event","actionDown","nativeEvent","onMouseMove","actionMove","onMouseUp","actionUp","onTouchStart","onTouchMove","onTouchEnd","viewBox","xlinkHref","React","Component","pieceTypes","type","baseColor","Board","boardRef","createRef","lastCoordinates","undefined","onStart","bind","onMove","onEnd","MouseEvent","toGridSpace","clientX","clientY","touch","touches","maxX","Infinity","minX","maxY","minY","cells","gameState","board","key","Math","max","min","destroyedPieces","piece","ref","rect","current","getBoundingClientRect","Error","floor","Engine","initialState","generator","allowedMoves","matchRules","currentState","sort","a","b","priority","console","time","settled","tick","score","timeEnd","start","end","some","f","x1","y1","x2","y2","temp","swap","previousState","before","JSON","stringify","falling","forEach","rule","apply","Object","assign","parse","basePieces","keys","index","random","length","uuidv4","moves","abs","clearGroup","group","first","nth","App","interval","engine","0","1","2","3","4","initialize","s","e","move","targetScore","forceUpdate","setInterval","clearInterval","startTime","Date","getTime","startScore","t","easeOutCirc","delta","sqrt","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7af8ef22.chunk.js","sourcesContent":["import React from 'react';\n\nconst style = {\n  display: 'none'\n};\n\nconst pieces = () =>\n<svg width=\"64\" height=\"64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style={style}>\n  <defs>\n    <g id=\"alpha\" fill=\"none\">\n      <circle cx=\"32\" cy=\"32\" r=\"24\" stroke=\"currentColor\" strokeWidth=\"4\"/>\n      <circle cx=\"32\" cy=\"32\" r=\"16\" stroke=\"currentColor\" strokeWidth=\"4\"/>\n    </g>\n    <path id=\"beta\" d=\"M48 12L16 52h32L16 12h32z\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"4\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    <path id=\"gamma\" d=\"M34 16a2 2 0 10-4 0h4zM8 38a2 2 0 100 4v-4zm48 4a2 2 0 100-4v4zm-5.59-17.59a2 2 0 10-2.82-2.82l2.82 2.82zm-34-2.82a2 2 0 10-2.82 2.82l2.82-2.82zM8 42h24v-4H8v4zm24 0h24v-4H32v4zm0-16c3.87 0 7.36 1.56 9.9 4.1l2.83-2.83A17.95 17.95 0 0032 22v4zm9.9 4.1A13.95 13.95 0 0146 40h4c0-4.97-2.02-9.47-5.27-12.73L41.9 30.1zm2.83 0l5.68-5.69-2.82-2.82-5.69 5.68 2.83 2.83zM18 40c0-3.87 1.56-7.36 4.1-9.9l-2.83-2.83A17.95 17.95 0 0014 40h4zm4.1-9.9A13.95 13.95 0 0132 26v-4c-4.97 0-9.47 2.02-12.73 5.27l2.83 2.83zm0-2.83l-5.69-5.68-2.82 2.82 5.68 5.69 2.83-2.83zM34 24v-8h-4v8h4z\" fill=\"currentColor\"/>\n    <path id=\"delta\" d=\"M32 12l1.41-1.41a2 2 0 00-2.82 0L32 12zM12 32l-1.41-1.41a2 2 0 000 2.82L12 32zm20 20l-1.41 1.41a2 2 0 002.82 0L32 52zm20-20l1.41 1.41a2 2 0 000-2.82L52 32zM30.59 10.59l-20 20 2.82 2.82 20-20-2.82-2.82zm-20 22.82l20 20 2.82-2.82-20-20-2.82 2.82zm22.82 20l20-20-2.82-2.82-20 20 2.82 2.82zm20-22.82l-20-20-2.82 2.82 20 20 2.82-2.82zM30 12v40h4V12h-4z\" fill=\"currentColor\"/>\n  </defs>\n</svg>;\n\nexport default pieces;","export interface State {\n  readonly board: Grid<true>;\n  score: number;\n  pieces: Grid<Piece>;\n  destroyedPieces: Grid<Piece>;\n  settled: boolean;\n}\n\ntype PieceType = string;\n\nexport interface Piece {\n  readonly id: string;\n  readonly type: PieceType;\n}\n\nexport function getCell<T>(grid: Grid<T>, x: number, y: number): T | undefined {\n  const column = grid[x];\n  if (column != null) {\n    return column[y];\n  } else {\n    return undefined;\n  }\n}\n\nexport function setCell<T>(grid: Grid<T>, x: number, y: number, object: T): T | undefined {\n  let column = grid[x];\n  if (column == null) {\n    grid[x] = {};\n    column = grid[x];\n  }\n\n  const old = column[y];\n  column[y] = object;\n  return old;\n}\n\nexport function forEachCell<T>(grid: Grid<T>, action: (x: number, y: number, object: T) => void) {\n  for (let x in grid) {\n    const column = grid[x];\n    for (let y in column) {\n      const object = column[y];\n      if (object != null) {\n        action(parseInt(x), parseInt(y), object);\n      }\n    }\n  }\n}\n\nexport function swap<T>(grid: Grid<T>, x1: number, y1: number, x2: number, y2: number): void {\n  const temp = getCell(grid, x1, y1);\n  setCell(grid, x1, y1, getCell(grid, x2, y2));\n  setCell(grid, x2, y2, temp);\n}\n\nexport type Grid<T> = {[x: number]: {[y: number]: T}};","import React from 'react';\nimport './Piece.css';\n\ninterface PieceProps {\n  color: string;\n  icon: string;\n  destroyed: boolean;\n  id: string;\n  scale: number;\n  selected: boolean;\n  x: number;\n  y: number;\n\n  actionDown: (event: MouseEvent | TouchEvent) => void;\n  actionMove: (event: MouseEvent | TouchEvent) => void;\n  actionUp: () => void;\n};\n\ninterface PieceState {\n  visible: boolean;\n}\n\nexport default class Piece extends React.Component<PieceProps, PieceState> {\n\n  constructor(props: PieceProps) {\n    super(props);\n\n    this.state = {\n      visible: false,\n    };\n  }\n\n  componentDidMount() {\n    window.setTimeout(() => {\n      this.setState({ visible: true });\n    }, 100);\n  }\n\n  render() {\n    const scale = this.props.scale\n    const style = {\n      color: this.props.color,\n      height: scale,\n      left: this.props.x * scale + 'px',\n      top: this.props.y * scale + 'px',\n      width: scale,\n    };\n    const icon = '#' + this.props.icon;\n    const className = ['Piece'];\n    if (!this.state.visible) {\n      className.push('hidden');\n    }\n    if (this.props.selected) {\n      className.push('selected');\n    }\n    if (this.props.destroyed) {\n      className.push('destroyed');\n    }\n\n    return <div\n        className={className.join(' ')}\n        style={style}\n        onMouseDown={(event) => this.props.actionDown(event.nativeEvent)}\n        onMouseMove={(event) => this.props.actionMove(event.nativeEvent)}\n        onMouseUp={this.props.actionUp}\n        onTouchStart={(event) => this.props.actionDown(event.nativeEvent)}\n        onTouchMove={(event) => this.props.actionMove(event.nativeEvent)}\n        onTouchEnd={this.props.actionUp}>\n      <svg width=\"64\" height=\"64\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\">\n        <use xlinkHref={icon} />\n      </svg>\n    </div>;\n  }\n}\n","import PieceType from \"../engine/pieceType\";\n\nconst pieceTypes: {[key: string]: PieceType} = {\n  'alpha': {\n    type: 'alpha',\n    icon: 'alpha',\n    baseColor: '#4791ff',\n  },\n  'beta': {\n    type: 'beta',\n    icon: 'beta',\n    baseColor: '#FFB800',\n  },\n  'gamma': {\n    type: 'gamma',\n    icon: 'gamma',\n    baseColor: '#EB00FF',\n  },\n  'delta': {\n    type: 'delta',\n    icon: 'delta',\n    baseColor: '#00FFC2',\n  },\n};\n\nexport default pieceTypes;","import React from 'react';\nimport { forEachCell, getCell, State } from './engine/state';\nimport Piece from './Piece';\nimport pieceTypes from './base/pieceTypes';\nimport './Board.css';\nimport { Coordinate } from './engine/util';\n\ninterface BoardProps {\n  gameState: State;\n  onStart: (s: Coordinate) => false;\n  onEnd: (e: Coordinate) => false;\n};\n\ninterface BoardState {\n  lastCoordinates: Coordinate | undefined;\n}\n\nconst scale = 64;\n\nexport class Board extends React.Component<BoardProps, BoardState> {\n  private boardRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: BoardProps) {\n    super(props);\n\n    this.boardRef = React.createRef();\n\n    this.state = {\n      lastCoordinates: undefined,\n    };\n    this.onStart = this.onStart.bind(this);\n    this.onMove = this.onMove.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n  }\n\n  onStart(event: MouseEvent | TouchEvent) {\n    if (event instanceof MouseEvent) {\n      this.props.onStart(this.toGridSpace(event.clientX, event.clientY));\n    } else {\n      const touch = event.touches[0];\n      this.props.onStart(this.toGridSpace(touch.clientX, touch.clientY));\n    }\n  }\n\n  onMove(event: MouseEvent | TouchEvent) {\n    if (event instanceof MouseEvent) {\n      this.setState({ lastCoordinates: this.toGridSpace(event.clientX, event.clientY) });\n    } else {\n      const touch = event.touches[0];\n      this.setState({ lastCoordinates: this.toGridSpace(touch.clientX, touch.clientY) });\n    }\n  }\n\n  onEnd() {\n    if (this.state.lastCoordinates != null) {\n      this.props.onEnd(this.state.lastCoordinates);\n    }\n    this.setState({ lastCoordinates: undefined });\n  }\n\n  render() {\n    let maxX = -Infinity;\n    let minX = Infinity;\n    let maxY = -Infinity;\n    let minY = Infinity;\n\n    const cells: JSX.Element[] = [];\n    forEachCell(this.props.gameState.board, (x, y) => {\n      const style = {\n        left: x * scale + 'px',\n        top: y * scale + 'px',\n      };\n      const key = `${x},${y}`;\n      const className = ['Board-cell']\n      if (getCell(this.props.gameState.board, x, y - 1) == null) {\n        className.push('Board-entry');\n      }\n      cells.push(<div className={className.join(' ')} style={style} key={key}></div>);\n\n      maxX = Math.max(x, maxX);\n      maxY = Math.max(y, maxY);\n      minX = Math.min(x, minX);\n      minY = Math.min(y, minY);\n    });\n\n    const pieces: JSX.Element[] = [];\n    forEachCell(this.props.gameState.destroyedPieces, (x, y, piece) => {\n      const type = pieceTypes[piece.type];\n      pieces.push(<Piece\n        color={type.baseColor}\n        destroyed={true}\n        icon={type.icon}\n        id={piece.id}\n        key={piece.id}\n        scale={scale}\n        selected={false}\n        x={x}\n        y={y}\n\n        actionDown={() => {}}\n        actionMove={() => {}}\n        actionUp={() => {}} />);\n    });\n    forEachCell(this.props.gameState.pieces, (x, y, piece) => {\n      const type = pieceTypes[piece.type];\n      const selected = this.state.lastCoordinates != null\n        && this.state.lastCoordinates.x === x\n        && this.state.lastCoordinates.y === y;\n      pieces.push(<Piece\n        color={type.baseColor}\n        destroyed={false}\n        icon={type.icon}\n        id={piece.id}\n        key={piece.id}\n        scale={scale}\n        selected={selected}\n        x={x}\n        y={y}\n        \n        actionDown={this.onStart}\n        actionMove={this.onMove}\n        actionUp={this.onEnd} />);\n    });\n\n    const style = {\n      width: (maxX - minX + 1) * scale + 'px',\n      height: (maxY - minY + 1) * scale + 'px',\n    };\n\n    return <div className=\"Board\" ref={this.boardRef} style={style}>\n      <div className=\"Board-grid\">{cells}</div>\n      <div className=\"Board-pieces\">{pieces}</div>\n    </div>\n  }\n\n  private toGridSpace(clientX: number, clientY: number): Coordinate {\n    const rect = this.boardRef.current?.getBoundingClientRect();\n    const left = rect?.left;\n    if (left == null) {\n      throw Error('Could not get left of board ref!');\n    }\n    const top = rect?.top;\n    if (top == null) {\n      throw Error('Could not get top of board ref!');\n    }\n    return {\n      x: Math.floor((clientX - left) / scale),\n      y: Math.floor((clientY - top) / scale),\n    };\n  }\n}\n\nexport default Board;\n","import { forEachCell, getCell, Piece, setCell, State, Grid, swap } from \"./state\"\nimport { Coordinate } from \"./util\";\n\nexport default class Engine {\n  private currentState: State;\n  private generator: Generator;\n\n  private allowedMoves: Move[];\n  private matchRules: MatchRule[];\n\n  constructor(initialState: State,\n      generator: Generator,\n      allowedMoves: Move[],\n      matchRules: MatchRule[]) {\n    this.currentState = initialState;\n    this.generator = generator;\n    this.allowedMoves = allowedMoves;\n    this.matchRules = matchRules.sort((a, b) => b.priority - a.priority);\n  }\n\n  get state(): State {\n    // Never return the actual state, return a copy.\n    return JSON.parse(JSON.stringify(this.currentState));\n  }\n\n  initialize(): void {\n    console.time();\n    while (!this.currentState.settled) {\n      this.tick();\n    }\n    this.currentState.score = 0;\n    this.currentState.destroyedPieces = [];\n    console.timeEnd();\n  }\n\n  /**\n   * Performs a move and sets the board into a new state does not perform\n   * scoring yet. Returns a boolean indicating if the rule is legal.\n   */\n  move(start: Coordinate, end: Coordinate): boolean {\n    if (this.currentState.settled === true\n        && this.allowedMoves.some((f) => f(start, end, this.currentState))) {\n      // If the move is legal swap the pieces.\n      swap(this.currentState.pieces, start.x, start.y, end.x, end.y);\n      this.currentState.settled = false;\n      return true;\n    } else {\n      return false;\n    }\n  }\n  \n  /**\n   * If the current state is not yet settled then tick will result in a new\n   * state.\n   */\n  tick(): State {\n    const previousState = this.state;\n    const before = JSON.stringify(previousState);\n    let state = this.state;\n    let settled = true;\n    state.destroyedPieces = [];\n\n    // Make list of falling cells.\n    const falling: Grid<true> = {};\n    forEachCell(state.board, (x, y) => {\n      if (getCell(state.pieces, x, y) == null) {\n        while (getCell(state.board, x, y) != null) {\n          setCell(falling, x, y, true);\n          y -= 1;\n        }\n      }\n    });\n\n    // Move falling cells down.\n    forEachCell(falling, (x, y) => {\n      if (getCell(state.board, x, y - 1) != null) { // There is a cell above\n        setCell(state.pieces, x, y, getCell(previousState.pieces, x, y - 1));\n      } else {\n        setCell(state.pieces, x, y, this.generator({x, y}));\n      }\n      settled = false;\n    });\n\n    // Apply match rules.\n    if (settled) {\n      this.matchRules.forEach((rule) => {\n        const before = JSON.stringify(state);\n        state = rule.apply(state);\n        if (before !== JSON.stringify(state)) {\n        }\n      });\n    }\n\n    state.settled = JSON.stringify(state) === before;\n    this.currentState = state;\n    return Object.assign({}, this.currentState);\n  }\n}\n\nexport type Move = (start: Coordinate, end: Coordinate, state: State) => boolean;\n\nexport interface MatchRule {\n  priority: number,\n  apply: (start: State) => State,\n};\n\nexport type Generator = (coord: Coordinate) => Piece;\n","import {v4 as uuidv4 } from 'uuid';\n\nimport { Generator } from '../engine';\nimport pieceTypes from './pieceTypes';\n\nconst basePieces = Object.keys(pieceTypes);\n\nconst generator: Generator = () => {\n  const index = Math.floor(Math.random() * basePieces.length);\n  return {\n    id: uuidv4(),\n    type: basePieces[index],\n  };\n};\n\nexport default generator;","import { Move } from \"../engine\";\nimport { getCell } from \"../engine/state\";\n\nconst moves: Move[] = [\n  (start, end, state) => {\n    // Must be adjacent.\n    if (Math.abs(start.x - end.x) + Math.abs(start.y - end.y) !== 1) {\n      return false;\n    }\n    // Both cells must be filled\n    return getCell(state.pieces, start.x, start.y) != null\n        && getCell(state.pieces, end.x, end.y) != null;\n  }\n]\n\nexport default moves;","import { MatchRule } from '../engine';\nimport { forEachCell, getCell, setCell, State } from '../engine/state';\nimport { Coordinate } from '../engine/util';\n\nfunction clearGroup(state: State, score: number, ...group: Coordinate[]) {\n  const pieces = state.pieces;\n  forEachCell(state.board, (x, y) => {\n    const first = getCell(pieces, x, y);\n    if (first == null) {\n      return;\n    }\n    const type = first.type;\n    for (let piece of group) {\n      const nth = getCell(pieces, x + piece.x, y + piece.y);\n      if (nth == null || nth.type !== type) {\n        return;\n      }\n    }\n\n    for (let piece of group) {\n      const old = setCell(state.pieces, x + piece.x, y + piece.y, undefined);\n      setCell(state.destroyedPieces, x + piece.x, y + piece.y, old);\n    }\n    state.score += score;\n  });\n\n  return state;\n}\n\nconst matchRules: MatchRule[] = [\n  { // Match 3 horizontally\n    priority: 0.1,\n    apply: (state) => {\n      clearGroup(state,\n        300,\n        { x: -3, y: 0 },\n        { x: -2, y: 0 },\n        { x: -1, y: 0 },\n        { x: 0, y: 0 });\n      return state;\n    },\n  },\n  { // Match 3 Vertically\n    priority: 0.1,\n    apply: (state) => {\n      clearGroup(state,\n        300,\n        { x: 0, y: -3 },\n        { x: 0, y: -2 },\n        { x: 0, y: -1 },\n        { x: 0, y: 0 });\n      return state;\n    },\n  },\n  { // Match 3 horizontally\n    priority: 0,\n    apply: (state) => {\n      clearGroup(state,\n        100,\n        { x: -2, y: 0 },\n        { x: -1, y: 0 },\n        { x: 0, y: 0 });\n      return state;\n    },\n  },\n  { // Match 3 Vertically\n    priority: 0,\n    apply: (state) => {\n      clearGroup(state,\n        100,\n        { x: 0, y: -2 },\n        { x: 0, y: -1 },\n        { x: 0, y: 0 });\n      return state;\n    },\n  },\n];\n\nexport default matchRules;","import React from 'react';\nimport BasePieces from './base/pieces';\nimport './App.css';\nimport Board from './Board';\nimport { State } from './engine/state';\nimport Engine from './engine';\nimport generator from './base/generator';\nimport moves from './base/moves';\nimport matchRules from './base/matches';\nimport { Coordinate } from './engine/util';\n\ninterface AppState  {\n  engine: Engine;\n  gameState: State;\n  start: Coordinate | undefined;\n  score: number;\n}\n\nexport default class App extends React.Component<any, AppState> {\n  private interval: number = 0;\n\n  constructor(props: any) {\n    super(props);\n\n    const gameState: State = {\n      board: {\n        0: {\n          1: true,\n          2: true,\n          3: true,\n        },\n        1: {\n          0: true,\n          1: true,\n          2: true,\n          3: true,\n          4: true,\n        },\n        2: {\n          0: true,\n          1: true,\n          2: true,\n          3: true,\n          4: true,\n        },\n        3: {\n          0: true,\n          1: true,\n          2: true,\n          3: true,\n          4: true,\n        },\n        4: {\n          1: true,\n          2: true,\n          3: true,\n        },\n      },\n      score: 0,\n      pieces: [],\n      destroyedPieces: [],\n      settled: false,\n    };\n\n    const engine = new Engine(gameState, generator, moves, matchRules);\n    engine.initialize();\n\n    this.state = {\n      engine: engine,\n      gameState: engine.state,\n      start: undefined,\n      score: engine.state.score,\n    };\n    this.onStart = this.onStart.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n  }\n\n  onStart(s: Coordinate): false {\n    this.setState({ start: s });\n    return false;\n  };\n\n  onEnd(e: Coordinate | undefined): false {\n    const engine = this.state.engine;\n    if (e != null && this.state.start != null && engine.state.settled) {\n      if (engine.move(this.state.start, e)) {\n        this.setState({ gameState: engine.state });\n        this.targetScore(engine.state.score);\n        this.forceUpdate();\n        let interval = window.setInterval(() => {;\n          this.setState({ gameState: engine.tick() });\n          this.targetScore(engine.state.score);\n          this.forceUpdate();\n          if (this.state.gameState.settled) {\n            window.clearInterval(interval);\n          }\n        }, 200);\n      }\n    }\n    this.setState({ start: undefined });\n    return false;\n  }\n\n  targetScore(score: number): void {\n    window.clearInterval(this.interval);\n    const startTime = new Date().getTime();\n    const startScore = this.state.score;\n\n    const interval = window.setInterval(() => {\n      let t = (new Date().getTime() - startTime) / 1000;\n      if (t > 1) {\n        this.setState({ score: score });\n        window.clearInterval(interval);\n        return;\n      }\n      this.setState({\n        score: Math.floor(this.easeOutCirc(t, startScore, score - startScore)),\n      });\n    }, 10);\n\n    this.interval = interval;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BasePieces />\n        <div className=\"score\">\n          {this.state.score}\n        </div>\n        <Board gameState={this.state.gameState}\n            onStart={this.onStart}\n            onEnd={this.onEnd}></Board>\n      </div>\n      );\n  }\n\n  private easeOutCirc(t: number, start: number, delta: number) {\n    t--;\n    return delta * Math.sqrt(1 - t*t) + start;\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}