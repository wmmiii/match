{"version":3,"sources":["engine/state.ts","engine/index.ts","base/pieces.tsx","base/matchRules.ts","base/moves.ts","base/objectives.ts","base/pieceTypes.ts","base/pieceGenerator.ts","base/levelPack.ts","LevelBrowser.tsx","Piece.tsx","Board.tsx","Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["GameStatus","ObjectiveStatus","style","display","pieces","width","height","fill","xmlns","id","cx","cy","r","stroke","strokeWidth","d","strokeLinecap","strokeLinejoin","getCell","grid","x","y","column","setCell","object","old","forEachCell","action","parseInt","Engine","description","generator","allowedMoves","matchRules","objectives","currentState","gameObjectives","this","destroyedLastTick","destroyedThisTick","moveCount","multiplier","board","gameStart","Date","totalMoves","score","settled","totalScore","status","IN_PROGRESS","sort","a","b","priority","console","time","tick","timeEnd","start","end","some","f","x1","y1","x2","y2","temp","swap","previousState","state","before","JSON","stringify","falling","forEach","rule","apply","o","FAILED","SUCCEEDED","Object","assign","parse","map","horizontalRemoval","verticalRemoval","piece","c","curr","horizontal","currPiece","type","push","length","vertical","coord","undefined","moves","Math","abs","scoreAtLeast","target","PENDING","pieceTypes","icon","baseColor","basePieces","keys","seed","rng","SeedRandom","index","floor","uuidv4","seededGenerator","levelPack","title","levels","generate","0","1","2","3","4","5","6","Infinity","7","8","LevelBrowser","prop","packs","pack","level","key","onClick","props","activate","className","React","Component","Piece","visible","window","setTimeout","setState","scale","color","left","top","selected","destroyed","join","onMouseDown","event","actionDown","nativeEvent","onMouseMove","actionMove","onMouseUp","actionUp","onTouchStart","onTouchMove","onTouchEnd","viewBox","xlinkHref","Board","boardRef","gridRef","createRef","maxX","minX","maxY","minY","gameState","max","min","lastCoordinates","translateX","translateY","gridWidth","gridHeight","onStart","bind","onMove","onEnd","onResize","addEventListener","removeEventListener","MouseEvent","toGridSpace","clientX","clientY","touch","touches","rect","current","getBoundingClientRect","scaleFactor","currentWidth","currentHeight","targetWidth","targetHeight","cells","innerStyle","contextStyle","transform","ref","Error","Game","lastNumber","Map","e3BlipRef","b3BlipRef","e4BlipRef","g4BlipRef","b4BlipRef","e5BlipRef","engine","initialize","s","e","move","update","interval","setInterval","clearInterval","blips","audio","count","random","element","cloneNode","volume","play","setObjectiveStatus","every","targetNumber","set","property","value","speed","get","startTime","getTime","startValue","requestAnimationFrame","onFrame","t","easeOutCirc","moveCounter","ticks","i","list","objectiveBox","src","delta","sqrt","App","gameInSession","objectiveStatus","toggleAudio","activateLevel","deactivateLevel","audioClass","game","back","appClass","browserClass","gameClass","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.619d038c.chunk.js","sourcesContent":["export interface State {\n  destroyedLastTick: Grid<Piece>;\n  destroyedThisTick: Grid<Piece>;\n  moveCount: number;\n  multiplier: number;\n  pieces: Grid<Piece>;\n  readonly board: Grid<true>;\n  readonly gameStart: Date;\n  readonly totalMoves: number;\n  score: number;\n  settled: boolean;\n  totalScore: number;\n  status: GameStatus;\n}\n\nexport interface ImmutableState extends State {\n  readonly destroyedLastTick: ImmutableGrid<Piece>;\n  readonly moveCount: number;\n  readonly settled: boolean;\n  readonly totalScore: number;\n  readonly status: GameStatus;\n}\n\nexport interface GameDescription {\n  readonly board: Grid<true>;\n  readonly totalMoves: number;\n  readonly pieces: Grid<Piece>;\n}\n\nexport enum GameStatus {\n  IN_PROGRESS,\n  SUCCEEDED,\n  FAILED,\n}\n\ntype PieceType = string;\n\nexport interface Piece {\n  readonly id: string;\n  readonly type: PieceType;\n}\n\nexport function getCell<T>(grid: Grid<T>, x: number, y: number): T | undefined {\n  const column = grid[x];\n  if (column != null) {\n    return column[y];\n  } else {\n    return undefined;\n  }\n}\n\nexport function setCell<T>(grid: Grid<T>, x: number, y: number, object: T): T | undefined {\n  let column = grid[x];\n  if (column == null) {\n    grid[x] = {};\n    column = grid[x];\n  }\n\n  const old = column[y];\n  column[y] = object;\n  return old;\n}\n\nexport function forEachCell<T>(grid: Grid<T>, action: (x: number, y: number, object: T) => void) {\n  for (let x in grid) {\n    const column = grid[x];\n    for (let y in column) {\n      const object = column[y];\n      if (object != null) {\n        action(parseInt(x), parseInt(y), object);\n      }\n    }\n  }\n}\n\nexport function swap<T>(grid: Grid<T>, x1: number, y1: number, x2: number, y2: number): void {\n  const temp = getCell(grid, x1, y1);\n  setCell(grid, x1, y1, getCell(grid, x2, y2));\n  setCell(grid, x2, y2, temp);\n}\n\nexport type Grid<T> = {[x: number]: {[y: number]: T}};\nexport type ImmutableGrid<T> = {readonly [x: number]: {readonly [y: number]: T}};","import { forEachCell, getCell, Piece, setCell, State, Grid, swap, ImmutableState, GameStatus, GameDescription } from \"./state\"\nimport { Coordinate } from \"./util\";\n\nexport enum ObjectiveStatus {\n  PENDING,\n  SUCCEEDED,\n  FAILED,\n}\n\nexport default class Engine {\n  private currentState: State;\n  private generator: Generator;\n\n  private allowedMoves: Move[];\n  private matchRules: MatchRule[];\n  private gameObjectives: Objective[];\n\n  constructor(description: GameDescription,\n      generator: Generator,\n      allowedMoves: Move[],\n      matchRules: MatchRule[],\n      objectives: Objective[]) {\n    this.currentState = {\n      destroyedLastTick: [],\n      destroyedThisTick: [],\n      moveCount: 0,\n      multiplier: 0,\n      pieces: description.pieces,\n      board: description.board,\n      gameStart: new Date(),\n      totalMoves: description.totalMoves,\n      score: 0,\n      settled: false,\n      totalScore: 0,\n      status: GameStatus.IN_PROGRESS,\n    };\n    this.generator = generator;\n    this.allowedMoves = allowedMoves;\n    this.matchRules = matchRules.sort((a, b) => b.priority - a.priority);\n    this.gameObjectives = objectives;\n  }\n\n  get state(): ImmutableState {\n    // Never return the actual state, return a copy.\n    return JSON.parse(JSON.stringify(this.currentState));\n  }\n\n  get objectives(): ObjectiveDescription[] {\n    return this.gameObjectives.map(o => {\n      return {\n        description: o.description,\n        status: o.status(this.state),\n      };\n    })\n  }\n\n  initialize(): void {\n    console.time();\n    while (!this.currentState.settled) {\n      this.tick();\n    }\n    this.currentState.totalScore = 0;\n    this.currentState.score = 0;\n    this.currentState.multiplier = 0;\n    this.currentState.destroyedThisTick = [];\n    console.timeEnd();\n  }\n\n  /**\n   * Performs a move and sets the board into a new state does not perform\n   * scoring yet. Returns a boolean indicating if the rule is legal.\n   */\n  move(start: Coordinate, end: Coordinate): boolean {\n    if (this.currentState.status !== GameStatus.IN_PROGRESS) {\n      return false;\n    }\n\n    if (this.currentState.settled === true\n        && this.allowedMoves.some((f) => f(start, end, this.currentState))) {\n      // If the move is legal swap the pieces.\n      swap(this.currentState.pieces, start.x, start.y, end.x, end.y);\n      this.currentState.settled = false;\n      this.currentState.moveCount++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n  \n  /**\n   * If the current state is not yet settled then tick will result in a new\n   * state.\n   */\n  tick(): State {\n    const previousState = this.state;\n    const before = JSON.stringify(previousState);\n    let state = this.state;\n    let settled = true;\n    (state as State).destroyedLastTick = state.destroyedThisTick;\n    state.destroyedThisTick = [];\n\n\n    // Make list of falling cells.\n    const falling: Grid<true> = {};\n    forEachCell(state.board, (x, y) => {\n      if (getCell(state.pieces, x, y) == null) {\n        while (getCell(state.board, x, y) != null) {\n          setCell(falling, x, y, true);\n          y -= 1;\n        }\n      }\n    });\n\n    // Move falling cells down.\n    forEachCell(falling, (x, y) => {\n      if (getCell(state.board, x, y - 1) != null) { // There is a cell above\n        setCell(state.pieces, x, y, getCell(previousState.pieces, x, y - 1));\n      } else {\n        setCell(state.pieces, x, y, this.generator({x, y}));\n      }\n      settled = false;\n    });\n\n    // Apply match rules.\n    if (settled) {\n      this.matchRules.forEach((rule) => {\n        state = rule.apply(state);\n      });\n    }\n\n    (state as State).settled = JSON.stringify(state) === before;\n\n    // Check objectives.\n    if (this.gameObjectives.some(o => o.status(state) === ObjectiveStatus.FAILED)) {\n      (state as State).status = GameStatus.FAILED;\n    }\n\n    if (state.settled) {\n      // If the system is settled cash the points.\n      (state as State).totalScore += state.score * state.multiplier;\n      state.score = 0;\n      state.multiplier = 0;\n\n      // Check to see if we're out of moves.\n      if (state.moveCount === state.totalMoves) {\n        if (this.gameObjectives.some(o => o.status(state) !== ObjectiveStatus.SUCCEEDED)) {\n          (state as State).status = GameStatus.FAILED;\n        } else {\n          (state as State).status = GameStatus.SUCCEEDED;\n        }\n      }\n    }\n\n    this.currentState = state;\n    return Object.assign({}, this.currentState);\n  }\n}\n\nexport type Move = (start: Coordinate, end: Coordinate, state: State) => boolean;\n\nexport interface MatchRule {\n  priority: number,\n  apply: (start: State) => State,\n};\n\nexport type Generator = (coord: Coordinate) => Piece;\n\nexport interface Objective {\n  description: string;\n  status: (state: State) => ObjectiveStatus;\n}\n\nexport interface ObjectiveDescription {\n  readonly description: string;\n  readonly status: ObjectiveStatus;\n}\n","import React from 'react';\n\nconst style = {\n  display: 'none'\n};\n\nconst pieces = () =>\n<svg width=\"64\" height=\"64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style={style}>\n  <defs>\n    <g id=\"alpha\" fill=\"none\">\n      <circle cx=\"32\" cy=\"32\" r=\"24\" stroke=\"currentColor\" strokeWidth=\"4\"/>\n      <circle cx=\"32\" cy=\"32\" r=\"16\" stroke=\"currentColor\" strokeWidth=\"4\"/>\n    </g>\n    <path id=\"beta\" d=\"M48 12L16 52h32L16 12h32z\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"4\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    <path id=\"gamma\" d=\"M34 16a2 2 0 10-4 0h4zM8 38a2 2 0 100 4v-4zm48 4a2 2 0 100-4v4zm-5.59-17.59a2 2 0 10-2.82-2.82l2.82 2.82zm-34-2.82a2 2 0 10-2.82 2.82l2.82-2.82zM8 42h24v-4H8v4zm24 0h24v-4H32v4zm0-16c3.87 0 7.36 1.56 9.9 4.1l2.83-2.83A17.95 17.95 0 0032 22v4zm9.9 4.1A13.95 13.95 0 0146 40h4c0-4.97-2.02-9.47-5.27-12.73L41.9 30.1zm2.83 0l5.68-5.69-2.82-2.82-5.69 5.68 2.83 2.83zM18 40c0-3.87 1.56-7.36 4.1-9.9l-2.83-2.83A17.95 17.95 0 0014 40h4zm4.1-9.9A13.95 13.95 0 0132 26v-4c-4.97 0-9.47 2.02-12.73 5.27l2.83 2.83zm0-2.83l-5.69-5.68-2.82 2.82 5.68 5.69 2.83-2.83zM34 24v-8h-4v8h4z\" fill=\"currentColor\"/>\n    <path id=\"delta\" d=\"M32 12l1.41-1.41a2 2 0 00-2.82 0L32 12zM12 32l-1.41-1.41a2 2 0 000 2.82L12 32zm20 20l-1.41 1.41a2 2 0 002.82 0L32 52zm20-20l1.41 1.41a2 2 0 000-2.82L52 32zM30.59 10.59l-20 20 2.82 2.82 20-20-2.82-2.82zm-20 22.82l20 20 2.82-2.82-20-20-2.82 2.82zm22.82 20l20-20-2.82-2.82-20 20 2.82 2.82zm20-22.82l-20-20-2.82 2.82 20 20 2.82-2.82zM30 12v40h4V12h-4z\" fill=\"currentColor\"/>\n  </defs>\n</svg>;\n\nexport default pieces;","import { MatchRule } from '../engine';\nimport { forEachCell, getCell, setCell, State } from '../engine/state';\nimport { Coordinate } from '../engine/util';\n\nfunction clearLines(state: State): State {\n  const pieces = state.pieces;\n  const horizontalRemoval: Coordinate[] = [];\n  const verticalRemoval: Coordinate[] = [];\n  forEachCell(pieces, (x, y, piece) => {\n    if (getCell(pieces, x, y) == null) {\n      return;\n    }\n\n    if (!horizontalRemoval.some(c => c.x === x && c.y === y)) {\n      const curr: Coordinate = { x: x, y: y };\n      const horizontal: Coordinate[] = [{ x: x, y: y }];\n      while (true) {\n        curr.x += 1;\n        const currPiece = getCell(pieces, curr.x, curr.y);\n        if (currPiece != null && currPiece.type === piece.type) {\n          horizontal.push({ x: curr.x, y: curr.y });\n        } else {\n          break;\n        }\n      }\n\n      if (horizontal.length > 2) {\n        state.score += (horizontal.length - 2) * 100;\n        state.multiplier += 1;\n        horizontalRemoval.push(...horizontal);\n      }\n    }\n\n    if (!verticalRemoval.some(c => c.x === x && c.y === y)) {\n      const curr: Coordinate = { x: x, y: y };\n      const vertical: Coordinate[] = [{ x: x, y: y }];\n      while (true) {\n        curr.y += 1;\n        const currPiece = getCell(pieces, curr.x, curr.y);\n        if (currPiece != null && currPiece.type === piece.type) {\n          vertical.push({ x: curr.x, y: curr.y });\n        } else {\n          break;\n        }\n      }\n\n      if (vertical.length > 2) {\n        state.score += (vertical.length - 2) * 100;\n        state.multiplier += 1;\n        verticalRemoval.push(...vertical);\n      }\n    }\n  });\n\n  for (const coord of horizontalRemoval) {\n    const old = setCell(state.pieces, coord.x, coord.y, undefined);\n    setCell(state.destroyedThisTick, coord.x, coord.y, old);\n  }\n\n  for (const coord of verticalRemoval) {\n    const old = setCell(state.pieces, coord.x, coord.y, undefined);\n    setCell(state.destroyedThisTick, coord.x, coord.y, old);\n  }\n\n  return state;\n}\n\nconst matchRules: MatchRule[] = [\n  {\n    priority: 0,\n    apply: clearLines,\n  }\n];\n\nexport default matchRules;","import { Move } from \"../engine\";\nimport { getCell } from \"../engine/state\";\n\nconst moves: Move[] = [\n  (start, end, state) => {\n    // Must be adjacent.\n    if (Math.abs(start.x - end.x) + Math.abs(start.y - end.y) !== 1) {\n      return false;\n    }\n    // Both cells must be filled\n    return getCell(state.pieces, start.x, start.y) != null\n        && getCell(state.pieces, end.x, end.y) != null;\n  }\n]\n\nexport default moves;","import { Objective, ObjectiveStatus } from \"../engine\";\n\nexport function scoreAtLeast(target: number): Objective {\n  return {\n    description: `Get at least ${target} points`,\n    status: (state) => {\n      if (state.totalScore >= target) {\n        return ObjectiveStatus.SUCCEEDED;\n      } else {\n        return ObjectiveStatus.PENDING;\n      }\n    }\n  };\n}\n\nexport function scoreAtMost(target: number): Objective {\n  return {\n    description: `Get at most ${target} points`,\n    status: (state) => {\n      if (state.totalScore > target) {\n        return ObjectiveStatus.FAILED;\n      } else if (state.totalMoves === state.moveCount) {\n        return ObjectiveStatus.SUCCEEDED;\n      } else {\n        return ObjectiveStatus.PENDING;\n      }\n    }\n  };\n}","import PieceType from \"../engine/pieceType\";\n\nconst pieceTypes: {[key: string]: PieceType} = {\n  'alpha': {\n    type: 'alpha',\n    icon: 'alpha',\n    baseColor: '#4791ff',\n  },\n  'beta': {\n    type: 'beta',\n    icon: 'beta',\n    baseColor: '#FFB800',\n  },\n  'gamma': {\n    type: 'gamma',\n    icon: 'gamma',\n    baseColor: '#EB00FF',\n  },\n  'delta': {\n    type: 'delta',\n    icon: 'delta',\n    baseColor: '#00FFC2',\n  },\n};\n\nexport default pieceTypes;","import {v4 as uuidv4 } from 'uuid';\nimport SeedRandom from 'seed-random';\n\nimport { Generator as PieceGenerator } from '../engine';\nimport pieceTypes from './pieceTypes';\n\nconst basePieces = Object.keys(pieceTypes);\n\nconst generator: PieceGenerator = seededGenerator();\n\nexport function seededGenerator(seed?: string): PieceGenerator {\n  const rng = SeedRandom(seed);\n  return () => {\n    const index = Math.floor(rng() * basePieces.length);\n    return {\n      id: uuidv4(),\n      type: basePieces[index],\n    };\n  }\n}\n\nexport default generator;","import Engine from \"../engine\";\nimport { GameDescription } from \"../engine/state\";\nimport LevelPack from \"../level/LevelPack\";\nimport matchRules from \"./matchRules\";\nimport moves from \"./moves\";\nimport { scoreAtLeast, scoreAtMost } from \"./objectives\";\nimport generator from \"./pieceGenerator\";\n\nconst levelPack: LevelPack = {\n  title: 'Base Level Pack',\n  levels: [\n    {\n      title: 'Free Play',\n      description: 'It just keeps going and going and going and...',\n      generate: () => {\n        const gameState: GameDescription = {\n          board: {\n            0: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            1: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            2: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            3: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            4: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            5: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            6: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n          },\n          pieces: {},\n          totalMoves: Infinity,\n        };\n\n        return new Engine(gameState, generator, moves, matchRules, []);\n      }\n    },\n    {\n      title: 'Classic',\n      description: '\"Wait, how is there a classic mode if this game was just created?\"',\n      generate: () => {\n        const gameState: GameDescription = {\n          board: {\n            0: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            1: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            2: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            3: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            4: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            5: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            6: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n          },\n          pieces: {},\n          totalMoves: 20,\n        };\n\n        return new Engine(gameState, generator, moves, matchRules, [scoreAtLeast(50000)]);\n      }\n    },\n    {\n      title: 'Doughnut',\n      description: 'Who doesn\\'t love the holiest of foods?',\n      generate: () => {\n        const gameState: GameDescription = {\n          board: {\n            0: { 2: true, 3: true, 4: true, 5: true, 6: true },\n            1: { 1: true, 2: true, 3: true, 4: true, 5: true, 6: true, 7: true },\n            2: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true, 7: true, 8: true },\n            3: { 0: true, 1: true, 2: true, 6: true, 7: true, 8: true },\n            4: { 0: true, 1: true, 2: true, 6: true, 7: true, 8: true },\n            5: { 0: true, 1: true, 2: true, 6: true, 7: true, 8: true },\n            6: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true, 7: true, 8: true },\n            7: { 1: true, 2: true, 3: true, 4: true, 5: true, 6: true, 7: true },\n            8: { 2: true, 3: true, 4: true, 5: true, 6: true },\n          },\n          pieces: {},\n          totalMoves: 20,\n        };\n\n        return new Engine(gameState, generator, moves, matchRules, [scoreAtLeast(50000)]);\n      }\n    },\n    {\n      title: 'Doughnut Hole',\n      description: 'We\\'re not going to waste any dough.',\n      generate: () => {\n        const gameState: GameDescription = {\n          board: {\n            0: { 1: true, 2: true, 3: true },\n            1: { 0: true, 1: true, 2: true, 3: true, 4: true },\n            2: { 0: true, 1: true, 2: true, 3: true, 4: true },\n            3: { 0: true, 1: true, 2: true, 3: true, 4: true },\n            4: { 1: true, 2: true, 3: true },\n          },\n          pieces: {},\n          totalMoves: 20,\n        };\n\n        const objectives = [\n          scoreAtLeast(1000),\n          scoreAtMost(2000),\n        ];\n\n        return new Engine(gameState, generator, moves, matchRules, objectives);\n      }\n    }\n  ]\n};\n\nexport default levelPack;","import React from 'react';\nimport './LevelBrowser.scss';\nimport levelPack from './base/levelPack';\nimport LevelPack from './level/LevelPack';\nimport Level from './level';\n\ninterface LevelBrowserProps {\n  activate: (level: Level) => void;\n}\n\ninterface LevelBrowserState {\n  packs: LevelPack[];\n}\n\nexport default class LevelBrowser extends React.Component<LevelBrowserProps, LevelBrowserState> {\n  constructor(prop: any) {\n    super(prop);\n\n    this.state = {\n      packs: [levelPack],\n    };\n  }\n\n  render() {\n    const packs: JSX.Element[] = [];\n    for (const pack of this.state.packs) {\n      const levels: JSX.Element[] = [];\n      for (const level of pack.levels) {\n        levels.push(\n          <li key={`${pack.title} ${level.title}`}\n              onClick={() => this.props.activate(level)}>\n            <h3>{level.title}</h3>\n            <p>{level.description}</p>\n          </li>\n        );\n      }\n\n      packs.push(\n        <div key={pack.title} className=\"pack\">\n          <h2>{pack.title}</h2>\n          <ol>{levels}</ol>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"LevelBrowser\">\n        {packs}\n      </div>\n      );\n  }\n}\n","import React from 'react';\nimport './Piece.scss';\n\ninterface PieceProps {\n  color: string;\n  icon: string;\n  destroyed: boolean;\n  id: string;\n  scale: number;\n  selected: boolean;\n  x: number;\n  y: number;\n\n  actionDown: (event: MouseEvent | TouchEvent) => void;\n  actionMove: (event: MouseEvent | TouchEvent) => void;\n  actionUp: () => void;\n};\n\ninterface PieceState {\n  visible: boolean;\n}\n\nexport default class Piece extends React.Component<PieceProps, PieceState> {\n\n  constructor(props: PieceProps) {\n    super(props);\n\n    this.state = {\n      visible: false,\n    };\n  }\n\n  componentDidMount() {\n    window.setTimeout(() => {\n      this.setState({ visible: true });\n    }, 100);\n  }\n\n  render() {\n    const scale = this.props.scale\n    const style = {\n      color: this.props.color,\n      height: scale,\n      left: this.props.x * scale + 'px',\n      top: this.props.y * scale + 'px',\n      width: scale,\n    };\n    const icon = '#' + this.props.icon;\n    const className = ['Piece'];\n    if (!this.state.visible) {\n      className.push('hidden');\n    }\n    if (this.props.selected) {\n      className.push('selected');\n    }\n    if (this.props.destroyed) {\n      className.push('destroyed');\n    }\n\n    return <div\n        className={className.join(' ')}\n        style={style}\n        onMouseDown={(event) => this.props.actionDown(event.nativeEvent)}\n        onMouseMove={(event) => this.props.actionMove(event.nativeEvent)}\n        onMouseUp={this.props.actionUp}\n        onTouchStart={(event) => this.props.actionDown(event.nativeEvent)}\n        onTouchMove={(event) => this.props.actionMove(event.nativeEvent)}\n        onTouchEnd={this.props.actionUp}>\n      <svg width=\"64\" height=\"64\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\">\n        <use xlinkHref={icon} />\n      </svg>\n    </div>;\n  }\n}\n","import React from 'react';\nimport { forEachCell, getCell, State, Piece as GamePiece, GameStatus } from './engine/state';\nimport pieceTypes from './base/pieceTypes';\nimport './Board.scss';\nimport { Coordinate } from './engine/util';\nimport Piece from './Piece';\n\ninterface BoardProps {\n  gameState: State;\n  onStart: (s: Coordinate) => false;\n  onEnd: (e: Coordinate) => false;\n};\n\ninterface BoardState {\n  lastCoordinates: Coordinate | undefined;\n  scale: number;\n  translateX: number;\n  translateY: number;\n  gridWidth: number;\n  gridHeight: number;\n}\n\nconst scale = 64;\n\nexport class Board extends React.Component<BoardProps, BoardState> {\n  private boardRef: React.RefObject<HTMLDivElement>;\n  private gridRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: BoardProps) {\n    super(props);\n\n    this.boardRef = React.createRef();\n    this.gridRef = React.createRef();\n\n    let maxX = -Infinity;\n    let minX = Infinity;\n    let maxY = -Infinity;\n    let minY = Infinity;\n\n    forEachCell(this.props.gameState.board, (x, y) => {\n      maxX = Math.max(x, maxX);\n      maxY = Math.max(y, maxY);\n      minX = Math.min(x, minX);\n      minY = Math.min(y, minY);\n    });\n\n    this.state = {\n      lastCoordinates: undefined,\n      scale: scale,\n      translateX: 0,\n      translateY: 0,\n      gridWidth: (maxX - minX + 1),\n      gridHeight: (maxY - minY + 1),\n    };\n    this.onStart = this.onStart.bind(this);\n    this.onMove = this.onMove.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.onResize);\n    this.onResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  onStart(event: MouseEvent | TouchEvent) {\n    if (event instanceof MouseEvent) {\n      this.props.onStart(this.toGridSpace(event.clientX, event.clientY));\n    } else {\n      const touch = event.touches[0];\n      this.props.onStart(this.toGridSpace(touch.clientX, touch.clientY));\n    }\n  }\n\n  onMove(event: MouseEvent | TouchEvent) {\n    if (event instanceof MouseEvent) {\n      this.setState({ lastCoordinates: this.toGridSpace(event.clientX, event.clientY) });\n    } else {\n      const touch = event.touches[0];\n      this.setState({ lastCoordinates: this.toGridSpace(touch.clientX, touch.clientY) });\n    }\n  }\n\n  onEnd() {\n    if (this.state.lastCoordinates != null) {\n      this.props.onEnd(this.state.lastCoordinates);\n    }\n    this.setState({ lastCoordinates: undefined });\n  }\n\n  onResize() {\n    const rect = this.boardRef.current?.getBoundingClientRect();\n    if (rect == null) {\n      return;\n    }\n\n    const currentWidth = this.state.gridWidth * scale;\n    const currentHeight = this.state.gridHeight * scale;\n\n    const targetWidth = rect.width - 32;\n    const targetHeight = rect.height - 32;\n\n    let scaleFactor: number;\n    if (targetWidth / targetHeight > currentWidth / currentHeight) {\n      // Calculate in terms of height\n      scaleFactor = targetHeight / currentHeight;\n    } else {\n      scaleFactor = targetWidth / currentWidth;\n    }\n\n    this.setState({ scale: scaleFactor });\n  }\n\n  render() {\n    const cells: JSX.Element[] = [];\n    forEachCell(this.props.gameState.board, (x, y) => {\n      const style = {\n        left: x * scale + 'px',\n        top: y * scale + 'px',\n      };\n      const key = `${x},${y}`;\n      const className = ['Board-cell']\n      if (getCell(this.props.gameState.board, x, y - 1) == null) {\n        className.push('Board-entry');\n      }\n      cells.push(<div className={className.join(' ')} style={style} key={key}></div>);\n    });\n\n    const pieces: JSX.Element[] = [];\n    const destroyed = (x: number, y: number, piece: GamePiece) => {\n      const type = pieceTypes[piece.type];\n      pieces.push(<Piece\n        color={type.baseColor}\n        destroyed={true}\n        icon={type.icon}\n        id={piece.id}\n        key={piece.id}\n        scale={scale}\n        selected={false}\n        x={x}\n        y={y}\n\n        actionDown={() => {}}\n        actionMove={() => {}}\n        actionUp={() => {}} />);\n    };\n    forEachCell(this.props.gameState.destroyedThisTick, destroyed);\n    forEachCell(this.props.gameState.destroyedLastTick, destroyed);\n    forEachCell(this.props.gameState.pieces, (x, y, piece) => {\n      const type = pieceTypes[piece.type];\n      const selected = this.state.lastCoordinates != null\n        && this.state.lastCoordinates.x === x\n        && this.state.lastCoordinates.y === y\n        && this.props.gameState.status === GameStatus.IN_PROGRESS;\n      pieces.push(<Piece\n        color={type.baseColor}\n        destroyed={false}\n        icon={type.icon}\n        id={piece.id}\n        key={piece.id}\n        scale={scale}\n        selected={selected}\n        x={x}\n        y={y}\n        \n        actionDown={this.onStart}\n        actionMove={this.onMove}\n        actionUp={this.onEnd} />);\n    });\n\n    const innerStyle = {\n      width: this.state.gridWidth * scale,\n      height: this.state.gridHeight * scale,\n    };\n\n    const transform = `scale(${this.state.scale})`;\n\n    const contextStyle = { transform: transform };\n\n    return <div className=\"Board\" ref={this.boardRef}>\n      <div className=\"context\" style={contextStyle}>\n        <div className=\"Board-grid\" ref={this.gridRef} style={innerStyle}>{cells}</div>\n        <div className=\"Board-pieces\" style={innerStyle}>{pieces}</div>\n      </div>\n    </div>\n  }\n\n  private toGridSpace(clientX: number, clientY: number): Coordinate {\n    const rect = this.gridRef.current?.getBoundingClientRect();\n    const left = rect?.left;\n    if (left == null) {\n      throw Error('Could not get left of board ref!');\n    }\n    const top = rect?.top;\n    if (top == null) {\n      throw Error('Could not get top of board ref!');\n    }\n    return {\n      x: Math.floor((clientX - left) / scale / this.state.scale),\n      y: Math.floor((clientY - top) / scale / this.state.scale),\n    };\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport './Game.scss';\nimport Board from './Board';\nimport { forEachCell, GameStatus, ImmutableState } from './engine/state';\nimport Engine, { ObjectiveDescription, ObjectiveStatus } from './engine';\nimport { Coordinate } from './engine/util';\n\ninterface GameState {\n  gameState: ImmutableState;\n  start: Coordinate | undefined;\n  totalScore: number;\n  score: number;\n  multiplier: number;\n}\n\ninterface GameProps {\n  audio: boolean;\n  engine: Engine;\n  setObjectiveStatus: (status: ObjectiveStatus) => void;\n}\n\nexport default class Game extends React.Component<GameProps, GameState> {\n  private lastNumber: Map<keyof GameState, number> = new Map();\n  private e3BlipRef: React.RefObject<HTMLAudioElement>;\n  private b3BlipRef: React.RefObject<HTMLAudioElement>;\n  private e4BlipRef: React.RefObject<HTMLAudioElement>;\n  private g4BlipRef: React.RefObject<HTMLAudioElement>;\n  private b4BlipRef: React.RefObject<HTMLAudioElement>;\n  private e5BlipRef: React.RefObject<HTMLAudioElement>;\n\n  constructor(props: GameProps) {\n    super(props);\n    this.e3BlipRef = React.createRef();\n    this.b3BlipRef = React.createRef();\n    this.e4BlipRef = React.createRef();\n    this.g4BlipRef = React.createRef();\n    this.b4BlipRef = React.createRef();\n    this.e5BlipRef = React.createRef();\n\n    props.engine.initialize();\n\n    this.state = {\n      gameState: props.engine.state,\n      start: undefined,\n      totalScore: props.engine.state.totalScore,\n      score: props.engine.state.score,\n      multiplier: props.engine.state.multiplier,\n    };\n    this.onStart = this.onStart.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n  }\n\n  onStart(s: Coordinate): false {\n    this.setState({ start: s });\n    return false;\n  };\n\n  onEnd(e: Coordinate | undefined): false {\n    const engine = this.props.engine;\n    if (e != null && this.state.start != null && engine.state.settled) {\n      if (engine.move(this.state.start, e)) {\n        this.update(engine.tick());\n        let interval = window.setInterval(() => {;\n          this.update(engine.tick());\n          if (this.state.gameState.settled) {\n            window.clearInterval(interval);\n          }\n        }, 150);\n      }\n    }\n    this.setState({ start: undefined });\n    return false;\n  }\n\n  update(state: ImmutableState) {\n    const blips = [\n      this.e3BlipRef,\n      this.b3BlipRef,\n      this.e4BlipRef,\n      this.g4BlipRef,\n      this.b4BlipRef,\n      this.e5BlipRef,\n    ];\n    if (this.props.audio) {\n      let count = 0;\n      forEachCell(state.destroyedThisTick, () => {\n        count++;\n        window.setTimeout(() => {\n          const index = Math.floor(Math.random() * blips.length);\n          const element = blips[index];\n          if (element != null && element.current != null) {\n            const audio = (element.current.cloneNode(true) as HTMLAudioElement);\n            audio.volume = 1 / count;\n            audio.play();\n          }\n        }, count * 40);\n      });\n    }\n\n    this.setState({\n      gameState: state,\n      multiplier: state.multiplier,\n    });\n\n    if (state.status === GameStatus.FAILED\n        || (this.props.engine.objectives.length > 0\n          && this.props.engine.objectives.some(o => o.status === ObjectiveStatus.FAILED))) {\n      this.props.setObjectiveStatus(ObjectiveStatus.FAILED);\n    } else if (state.status === GameStatus.SUCCEEDED\n        || (this.props.engine.objectives.length > 0\n          && this.props.engine.objectives.every(o => o.status === ObjectiveStatus.SUCCEEDED))) {\n      this.props.setObjectiveStatus(ObjectiveStatus.SUCCEEDED);\n    } else {\n      this.props.setObjectiveStatus(ObjectiveStatus.PENDING);\n    }\n    this.targetNumber('totalScore', state.totalScore, 2000);\n    if (state.score !== 0) {\n      this.targetNumber('score', state.score, 200); \n    } else {\n      this.setState({ score: 0 });\n      this.lastNumber.set('score', 0);\n    }\n  }\n\n  targetNumber(property: keyof GameState, value: number, speed: number) {\n    if (this.lastNumber.get(property) === value) {\n      return;\n    }\n\n    const startTime = new Date().getTime();\n    const startValue = this.state[property] as number;\n\n    const onFrame = () => {\n      if (this.lastNumber.get(property) !== value) {\n        return;\n      }\n\n      let t = (new Date().getTime() - startTime) / speed;\n      if (t > 1) {\n        const state: any = {};\n        state[property] = value;\n        this.setState(state);\n        return;\n      }\n      const state: any = {};\n      state[property] = Math.floor(this.easeOutCirc(t, startValue, value - startValue));\n      this.setState(state);\n      window.requestAnimationFrame(onFrame);\n    };\n    window.requestAnimationFrame(onFrame);\n\n    this.lastNumber.set(property, value);\n  }\n\n  render() {\n    const state = this.state.gameState;\n    let moveCounter: JSX.Element | undefined;\n    if (state.totalMoves > 0 && state.totalMoves < Infinity) {\n      const ticks: JSX.Element[] = [];\n      for (let i = 0; i < state.totalMoves; ++i) {\n        ticks.push(<div key={i} className=\"tick\"></div>);\n      }\n\n      const fraction = state.moveCount / state.totalMoves;\n\n      const style = { top: fraction * 100 + '%' }\n      moveCounter =\n        <div className=\"move-counter\">\n          <div className=\"moves-remaining\" style={style}></div>\n          {ticks}\n        </div>\n    }\n\n    return (\n      <div className=\"Game\">\n        <div className=\"header\">\n          <div className=\"score\">\n            {this.state.totalScore}\n          </div>\n          <div className=\"space\"></div>\n          <div className=\"score\">\n            {this.state.score}\n          </div>\n          <div className=\"spacer\"></div>\n          <div className=\"score\">\n            x{this.state.multiplier}\n          </div>\n        </div>\n        <div className=\"play-area\">\n          {objectiveBox(this.props.engine.objectives)}\n          <Board gameState={this.state.gameState}\n              onStart={this.onStart}\n              onEnd={this.onEnd}></Board>\n          {moveCounter}\n        </div>\n        <audio ref={this.e3BlipRef} src=\"e3blip.wav\" />\n        <audio ref={this.b3BlipRef} src=\"b3blip.wav\" />\n        <audio ref={this.e4BlipRef} src=\"e4blip.wav\" />\n        <audio ref={this.g4BlipRef} src=\"g4blip.wav\" />\n        <audio ref={this.b4BlipRef} src=\"b4blip.wav\" />\n        <audio ref={this.e5BlipRef} src=\"e5blip.wav\" />\n        <svg width=\"64\" height=\"64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <defs>\n            <path id=\"pending\" d=\"M48 16h2a2 2 0 00-2-2v2zm-32 0v-2a2 2 0 00-2 2h2zm0 32h-2c0 1.1.9 2 2 2v-2zm32 0v2a2 2 0 002-2h-2zm0-34H16v4h32v-4zm-34 2v32h4V16h-4zm2 34h32v-4H16v4zm34-2V16h-4v32h4z\" fill=\"#A3A3A3\"/>\n            <path id=\"success\" d=\"M48 16h2a2 2 0 00-2-2v2zm-32 0v-2a2 2 0 00-2 2h2zm0 32h-2c0 1.1.9 2 2 2v-2zm32 0v2a2 2 0 002-2h-2zM25.41 30.59a2 2 0 10-2.82 2.82l2.82-2.82zM32 40l-1.41 1.41a2 2 0 002.82 0L32 40zm25.41-22.59a2 2 0 10-2.82-2.82l2.82 2.82zM48 14H16v4h32v-4zm-34 2v32h4V16h-4zm2 34h32v-4H16v4zm34-2V16h-4v32h4zM22.59 33.41l8 8 2.82-2.82-8-8-2.82 2.82zm10.82 8l24-24-2.82-2.82-24 24 2.82 2.82z\" fill=\"#A3A3A3\"/>\n            <path id=\"failure\" d=\"M48 16h2a2 2 0 00-2-2v2zm-32 0v-2a2 2 0 00-2 2h2zm0 32h-2c0 1.1.9 2 2 2v-2zm32 0v2a2 2 0 002-2h-2zM25.41 22.59a2 2 0 10-2.82 2.82l2.82-2.82zM38.6 41.4a2 2 0 102.82-2.82L38.6 41.4zm-16-2.82a2 2 0 102.82 2.82L22.6 38.6zM41.4 25.4a2 2 0 10-2.82-2.82l2.82 2.82zM48 14H16v4h32v-4zm-34 2v32h4V16h-4zm2 34h32v-4H16v4zm34-2V16h-4v32h4zM22.59 25.41l16 16 2.82-2.82-16-16-2.82 2.82zm2.82 16l16-16-2.82-2.82-16 16 2.82 2.82z\" fill=\"#A3A3A3\"/>\n          </defs>\n        </svg>\n      </div>\n      );\n  }\n\n  private easeOutCirc(t: number, start: number, delta: number) {\n    t--;\n    return delta * Math.sqrt(1 - t*t) + start;\n  };\n}\n\nfunction objectiveBox(objectives: ObjectiveDescription[]): JSX.Element | undefined {\n  if (objectives.length === 0) {\n    return undefined;\n  }\n  const list = objectives.map(o => {\n    let icon: string;\n    if (o.status === ObjectiveStatus.SUCCEEDED) {\n      icon = '#success';\n    } else if (o.status === ObjectiveStatus.FAILED) {\n      icon = '#failure';\n    } else {\n      icon = '#pending';\n    }\n    return <li key={o.description} className=\"objective\">\n      <svg width=\"64\" height=\"64\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\">\n        <use xlinkHref={icon} />\n      </svg>\n      <p>{o.description}</p>\n    </li>;\n  });\n  return <div className=\"objectives\">\n      <h3>{objectives.length > 1 ? 'Objectives' : 'Objective'}</h3>\n      <ol>\n        {list}\n      </ol>\n    </div>;\n}","import React from 'react';\nimport './App.scss';\nimport BasePieces from './base/pieces';\nimport LevelBrowser from './LevelBrowser';\nimport Level from './level';\nimport Engine, { ObjectiveStatus } from './engine';\nimport Game from './Game';\n\ninterface AppState  {\n  audio: boolean;\n  gameInSession: boolean;\n  objectiveStatus: ObjectiveStatus;\n  level?: Level;\n  engine?: Engine;\n}\n\nexport default class App extends React.Component<any, AppState> {\n  constructor(prop: any) {\n    super(prop);\n\n    this.state = {\n      audio: true,\n      gameInSession: false,\n      objectiveStatus: ObjectiveStatus.PENDING,\n    };\n\n    this.toggleAudio = this.toggleAudio.bind(this);\n    this.activateLevel = this.activateLevel.bind(this);\n    this.deactivateLevel = this.deactivateLevel.bind(this);\n    this.setObjectiveStatus = this.setObjectiveStatus.bind(this);\n  }\n\n  toggleAudio(): void {\n    this.setState({ audio: !this.state.audio });\n  }\n\n  activateLevel(level: Level): void {\n    this.setState({\n      level: level,\n      engine: level.generate(),\n      gameInSession: true,\n    });\n  }\n\n  deactivateLevel(): void {\n    this.setState({\n      gameInSession: false,\n      objectiveStatus: ObjectiveStatus.PENDING,\n    });\n    window.setTimeout(() => {\n      this.setState({\n        level: undefined,\n        engine: undefined,\n      });\n    }, 400);\n  }\n\n  setObjectiveStatus(status: ObjectiveStatus): void {\n    this.setState({ objectiveStatus: status });\n  }\n\n  render() {\n    const audioClass = ['audio'];\n    if (!this.state.audio) {\n      audioClass.push('disabled');\n    }\n\n    const appClass = ['App'];\n    if (this.state.objectiveStatus === ObjectiveStatus.SUCCEEDED) {\n      appClass.push('succeeded');\n    } else if (this.state.objectiveStatus === ObjectiveStatus.FAILED) {\n      appClass.push('failed');\n    }\n\n    let game: JSX.Element | undefined;\n    let back: JSX.Element | undefined;\n    const browserClass = ['browser'];\n    const gameClass = ['game'];\n    if (this.state.gameInSession) {\n      browserClass.push('hidden');\n      back = \n        <button onClick={this.deactivateLevel}>\n          Back\n        </button>;\n    } else {\n      gameClass.push('hidden');\n    }\n\n    if (this.state.level != null && this.state.engine != null) {\n      game = <Game\n          audio={this.state.audio}\n          engine={this.state.engine}\n          setObjectiveStatus={this.setObjectiveStatus} />;\n    }\n\n    return (\n      <div className={appClass.join(' ')}>\n        <header>\n          {back}\n          <div className=\"spacer\"></div>\n          <button className={audioClass.join(' ')}\n              onClick={this.toggleAudio}>\n            {this.state.audio ? 'Sound On' : 'Sound Off'}\n          </button>\n        </header>\n        <BasePieces />\n        <div className=\"wrapper\">\n          <div className={browserClass.join(' ')}>\n            <LevelBrowser activate={this.activateLevel} />\n          </div>\n          <div className={gameClass.join(' ')}>\n            {game}\n          </div>\n        </div>\n        <div className=\"success\"></div>\n        <div className=\"failure\"></div>\n      </div>\n      );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}