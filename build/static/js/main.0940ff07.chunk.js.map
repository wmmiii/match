{"version":3,"sources":["base/pieces.tsx","engine/state.ts","engine/index.ts","base/matchRules.ts","base/moves.ts","base/pieceTypes.ts","base/pieceGenerator.ts","base/levelPack.ts","LevelBrowser.tsx","Piece.tsx","Board.tsx","Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["style","display","pieces","width","height","fill","xmlns","id","cx","cy","r","stroke","strokeWidth","d","strokeLinecap","strokeLinejoin","getCell","grid","x","y","column","setCell","object","old","forEachCell","action","parseInt","Engine","initialState","generator","allowedMoves","matchRules","currentState","this","sort","a","b","priority","console","time","settled","tick","totalScore","score","multiplier","destroyedThisTick","timeEnd","start","end","some","f","x1","y1","x2","y2","temp","swap","previousState","state","before","JSON","stringify","destroyedLastTick","falling","board","forEach","rule","apply","Object","assign","parse","clearGroup","group","first","type","piece","nth","undefined","moves","Math","abs","pieceTypes","icon","baseColor","basePieces","keys","seed","rng","SeedRandom","index","floor","length","uuidv4","seededGenerator","levelPack","title","levels","description","generate","0","1","2","3","4","5","6","7","8","LevelBrowser","prop","packs","pack","level","push","key","onClick","props","activate","className","React","Component","Piece","visible","window","setTimeout","setState","scale","color","left","top","selected","destroyed","join","onMouseDown","event","actionDown","nativeEvent","onMouseMove","actionMove","onMouseUp","actionUp","onTouchStart","onTouchMove","onTouchEnd","viewBox","xlinkHref","Board","boardRef","gridRef","createRef","maxX","Infinity","minX","maxY","minY","gameState","max","min","lastCoordinates","translateX","translateY","gridWidth","gridHeight","onStart","bind","onMove","onEnd","onResize","addEventListener","removeEventListener","MouseEvent","toGridSpace","clientX","clientY","touch","touches","rect","current","getBoundingClientRect","scaleFactor","currentWidth","currentHeight","targetWidth","targetHeight","cells","innerStyle","contextStyle","transform","ref","Error","Game","lastNumber","Map","aBlipRef","amBlipRef","emBlipRef","gmBlipRef","engine","initialize","s","e","move","update","interval","setInterval","clearInterval","blips","audio","count","random","element","cloneNode","volume","play","targetNumber","set","property","value","speed","get","startTime","Date","getTime","startValue","requestAnimationFrame","onFrame","t","easeOutCirc","src","delta","sqrt","App","gameInSession","toggleAudio","activateLevel","deactivateLevel","game","back","audioClass","browserClass","gameClass","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0940ff07.chunk.js","sourcesContent":["import React from 'react';\n\nconst style = {\n  display: 'none'\n};\n\nconst pieces = () =>\n<svg width=\"64\" height=\"64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style={style}>\n  <defs>\n    <g id=\"alpha\" fill=\"none\">\n      <circle cx=\"32\" cy=\"32\" r=\"24\" stroke=\"currentColor\" strokeWidth=\"4\"/>\n      <circle cx=\"32\" cy=\"32\" r=\"16\" stroke=\"currentColor\" strokeWidth=\"4\"/>\n    </g>\n    <path id=\"beta\" d=\"M48 12L16 52h32L16 12h32z\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"4\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    <path id=\"gamma\" d=\"M34 16a2 2 0 10-4 0h4zM8 38a2 2 0 100 4v-4zm48 4a2 2 0 100-4v4zm-5.59-17.59a2 2 0 10-2.82-2.82l2.82 2.82zm-34-2.82a2 2 0 10-2.82 2.82l2.82-2.82zM8 42h24v-4H8v4zm24 0h24v-4H32v4zm0-16c3.87 0 7.36 1.56 9.9 4.1l2.83-2.83A17.95 17.95 0 0032 22v4zm9.9 4.1A13.95 13.95 0 0146 40h4c0-4.97-2.02-9.47-5.27-12.73L41.9 30.1zm2.83 0l5.68-5.69-2.82-2.82-5.69 5.68 2.83 2.83zM18 40c0-3.87 1.56-7.36 4.1-9.9l-2.83-2.83A17.95 17.95 0 0014 40h4zm4.1-9.9A13.95 13.95 0 0132 26v-4c-4.97 0-9.47 2.02-12.73 5.27l2.83 2.83zm0-2.83l-5.69-5.68-2.82 2.82 5.68 5.69 2.83-2.83zM34 24v-8h-4v8h4z\" fill=\"currentColor\"/>\n    <path id=\"delta\" d=\"M32 12l1.41-1.41a2 2 0 00-2.82 0L32 12zM12 32l-1.41-1.41a2 2 0 000 2.82L12 32zm20 20l-1.41 1.41a2 2 0 002.82 0L32 52zm20-20l1.41 1.41a2 2 0 000-2.82L52 32zM30.59 10.59l-20 20 2.82 2.82 20-20-2.82-2.82zm-20 22.82l20 20 2.82-2.82-20-20-2.82 2.82zm22.82 20l20-20-2.82-2.82-20 20 2.82 2.82zm20-22.82l-20-20-2.82 2.82 20 20 2.82-2.82zM30 12v40h4V12h-4z\" fill=\"currentColor\"/>\n  </defs>\n</svg>;\n\nexport default pieces;","export interface State {\n  readonly board: Grid<true>;\n  totalScore: number;\n  multiplier: number;\n  score: number;\n  pieces: Grid<Piece>;\n  destroyedThisTick: Grid<Piece>;\n  destroyedLastTick: Grid<Piece>;\n  settled: boolean;\n}\n\nexport interface ImmutableState extends State {\n  readonly totalScore: number;\n  readonly destroyedLastTick: ImmutableGrid<Piece>;\n  readonly settled: boolean;\n}\n\ntype PieceType = string;\n\nexport interface Piece {\n  readonly id: string;\n  readonly type: PieceType;\n}\n\nexport function getCell<T>(grid: Grid<T>, x: number, y: number): T | undefined {\n  const column = grid[x];\n  if (column != null) {\n    return column[y];\n  } else {\n    return undefined;\n  }\n}\n\nexport function setCell<T>(grid: Grid<T>, x: number, y: number, object: T): T | undefined {\n  let column = grid[x];\n  if (column == null) {\n    grid[x] = {};\n    column = grid[x];\n  }\n\n  const old = column[y];\n  column[y] = object;\n  return old;\n}\n\nexport function forEachCell<T>(grid: Grid<T>, action: (x: number, y: number, object: T) => void) {\n  for (let x in grid) {\n    const column = grid[x];\n    for (let y in column) {\n      const object = column[y];\n      if (object != null) {\n        action(parseInt(x), parseInt(y), object);\n      }\n    }\n  }\n}\n\nexport function swap<T>(grid: Grid<T>, x1: number, y1: number, x2: number, y2: number): void {\n  const temp = getCell(grid, x1, y1);\n  setCell(grid, x1, y1, getCell(grid, x2, y2));\n  setCell(grid, x2, y2, temp);\n}\n\nexport type Grid<T> = {[x: number]: {[y: number]: T}};\nexport type ImmutableGrid<T> = {readonly [x: number]: {readonly [y: number]: T}};","import { forEachCell, getCell, Piece, setCell, State, Grid, swap, ImmutableState } from \"./state\"\nimport { Coordinate } from \"./util\";\n\nexport default class Engine {\n  private currentState: State;\n  private generator: Generator;\n\n  private allowedMoves: Move[];\n  private matchRules: MatchRule[];\n\n  constructor(initialState: State,\n      generator: Generator,\n      allowedMoves: Move[],\n      matchRules: MatchRule[]) {\n    this.currentState = initialState;\n    this.generator = generator;\n    this.allowedMoves = allowedMoves;\n    this.matchRules = matchRules.sort((a, b) => b.priority - a.priority);\n  }\n\n  get state(): ImmutableState {\n    // Never return the actual state, return a copy.\n    return JSON.parse(JSON.stringify(this.currentState));\n  }\n\n  initialize(): void {\n    console.time();\n    while (!this.currentState.settled) {\n      this.tick();\n    }\n    this.currentState.totalScore = 0;\n    this.currentState.score = 0;\n    this.currentState.multiplier = 0;\n    this.currentState.destroyedThisTick = [];\n    console.timeEnd();\n  }\n\n  /**\n   * Performs a move and sets the board into a new state does not perform\n   * scoring yet. Returns a boolean indicating if the rule is legal.\n   */\n  move(start: Coordinate, end: Coordinate): boolean {\n    if (this.currentState.settled === true\n        && this.allowedMoves.some((f) => f(start, end, this.currentState))) {\n      // If the move is legal swap the pieces.\n      swap(this.currentState.pieces, start.x, start.y, end.x, end.y);\n      this.currentState.settled = false;\n      return true;\n    } else {\n      return false;\n    }\n  }\n  \n  /**\n   * If the current state is not yet settled then tick will result in a new\n   * state.\n   */\n  tick(): State {\n    const previousState = this.state;\n    const before = JSON.stringify(previousState);\n    let state = this.state;\n    let settled = true;\n    (state as State).destroyedLastTick = state.destroyedThisTick;\n    state.destroyedThisTick = [];\n\n\n    // Make list of falling cells.\n    const falling: Grid<true> = {};\n    forEachCell(state.board, (x, y) => {\n      if (getCell(state.pieces, x, y) == null) {\n        while (getCell(state.board, x, y) != null) {\n          setCell(falling, x, y, true);\n          y -= 1;\n        }\n      }\n    });\n\n    // Move falling cells down.\n    forEachCell(falling, (x, y) => {\n      if (getCell(state.board, x, y - 1) != null) { // There is a cell above\n        setCell(state.pieces, x, y, getCell(previousState.pieces, x, y - 1));\n      } else {\n        setCell(state.pieces, x, y, this.generator({x, y}));\n      }\n      settled = false;\n    });\n\n    // Apply match rules.\n    if (settled) {\n      this.matchRules.forEach((rule) => {\n        const before = JSON.stringify(state);\n        state = rule.apply(state);\n        if (before !== JSON.stringify(state)) {\n        }\n      });\n    }\n\n    (state as State).settled = JSON.stringify(state) === before;\n\n    // If the system is settled cash the points\n    if (state.settled) {\n      (state as State).totalScore += state.score * state.multiplier;\n      state.score = 0;\n      state.multiplier = 0;\n    }\n\n    this.currentState = state;\n    return Object.assign({}, this.currentState);\n  }\n}\n\nexport type Move = (start: Coordinate, end: Coordinate, state: State) => boolean;\n\nexport interface MatchRule {\n  priority: number,\n  apply: (start: State) => State,\n};\n\nexport type Generator = (coord: Coordinate) => Piece;\n","import { MatchRule } from '../engine';\nimport { forEachCell, getCell, setCell, State } from '../engine/state';\nimport { Coordinate } from '../engine/util';\n\nfunction clearGroup(state: State, score: number, ...group: Coordinate[]) {\n  const pieces = state.pieces;\n  forEachCell(state.board, (x, y) => {\n    const first = getCell(pieces, x, y);\n    if (first == null) {\n      return;\n    }\n    const type = first.type;\n    for (let piece of group) {\n      const nth = getCell(pieces, x + piece.x, y + piece.y);\n      if (nth == null || nth.type !== type) {\n        return;\n      }\n    }\n\n    for (let piece of group) {\n      const old = setCell(state.pieces, x + piece.x, y + piece.y, undefined);\n      setCell(state.destroyedThisTick, x + piece.x, y + piece.y, old);\n    }\n    state.score += score;\n    state.multiplier += 1;\n  });\n\n  return state;\n}\n\nconst matchRules: MatchRule[] = [\n  { // Match 5 horizontally\n    priority: 0.2,\n    apply: (state) => {\n      clearGroup(state,\n        500,\n        { x: -4, y: 0 },\n        { x: -3, y: 0 },\n        { x: -2, y: 0 },\n        { x: -1, y: 0 },\n        { x: 0, y: 0 });\n      return state;\n    },\n  },\n  { // Match 5 Vertically\n    priority: 0.2,\n    apply: (state) => {\n      clearGroup(state,\n        500,\n        { x: 0, y: -4 },\n        { x: 0, y: -3 },\n        { x: 0, y: -2 },\n        { x: 0, y: -1 },\n        { x: 0, y: 0 });\n      return state;\n    },\n  },\n  { // Match 4 horizontally\n    priority: 0.1,\n    apply: (state) => {\n      clearGroup(state,\n        300,\n        { x: -3, y: 0 },\n        { x: -2, y: 0 },\n        { x: -1, y: 0 },\n        { x: 0, y: 0 });\n      return state;\n    },\n  },\n  { // Match 4 Vertically\n    priority: 0.1,\n    apply: (state) => {\n      clearGroup(state,\n        300,\n        { x: 0, y: -3 },\n        { x: 0, y: -2 },\n        { x: 0, y: -1 },\n        { x: 0, y: 0 });\n      return state;\n    },\n  },\n  { // Match 3 horizontally\n    priority: 0,\n    apply: (state) => {\n      clearGroup(state,\n        100,\n        { x: -2, y: 0 },\n        { x: -1, y: 0 },\n        { x: 0, y: 0 });\n      return state;\n    },\n  },\n  { // Match 3 Vertically\n    priority: 0,\n    apply: (state) => {\n      clearGroup(state,\n        100,\n        { x: 0, y: -2 },\n        { x: 0, y: -1 },\n        { x: 0, y: 0 });\n      return state;\n    },\n  },\n];\n\nexport default matchRules;","import { Move } from \"../engine\";\nimport { getCell } from \"../engine/state\";\n\nconst moves: Move[] = [\n  (start, end, state) => {\n    // Must be adjacent.\n    if (Math.abs(start.x - end.x) + Math.abs(start.y - end.y) !== 1) {\n      return false;\n    }\n    // Both cells must be filled\n    return getCell(state.pieces, start.x, start.y) != null\n        && getCell(state.pieces, end.x, end.y) != null;\n  }\n]\n\nexport default moves;","import PieceType from \"../engine/pieceType\";\n\nconst pieceTypes: {[key: string]: PieceType} = {\n  'alpha': {\n    type: 'alpha',\n    icon: 'alpha',\n    baseColor: '#4791ff',\n  },\n  'beta': {\n    type: 'beta',\n    icon: 'beta',\n    baseColor: '#FFB800',\n  },\n  'gamma': {\n    type: 'gamma',\n    icon: 'gamma',\n    baseColor: '#EB00FF',\n  },\n  'delta': {\n    type: 'delta',\n    icon: 'delta',\n    baseColor: '#00FFC2',\n  },\n};\n\nexport default pieceTypes;","import {v4 as uuidv4 } from 'uuid';\nimport SeedRandom from 'seed-random';\n\nimport { Generator as PieceGenerator } from '../engine';\nimport pieceTypes from './pieceTypes';\n\nconst basePieces = Object.keys(pieceTypes);\n\nconst generator: PieceGenerator = seededGenerator();\n\nexport function seededGenerator(seed?: string): PieceGenerator {\n  const rng = SeedRandom(seed);\n  return () => {\n    const index = Math.floor(rng() * basePieces.length);\n    return {\n      id: uuidv4(),\n      type: basePieces[index],\n    };\n  }\n}\n\nexport default generator;","import Engine from \"../engine\";\nimport { State } from \"../engine/state\";\nimport LevelPack from \"../level/LevelPack\";\nimport matchRules from \"./matchRules\";\nimport moves from \"./moves\";\nimport generator from \"./pieceGenerator\";\n\nconst levelPack: LevelPack = {\n  title: 'Base Level Pack',\n  levels: [\n    {\n      title: 'Classic',\n      description: '\"Wait, how is there a classic mode if this game was just created?\"',\n      generate: () => {\n        const gameState: State = {\n          board: {\n            0: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            1: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            2: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            3: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            4: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            5: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n            6: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true},\n          },\n          totalScore: 0,\n          score: 0,\n          multiplier: 0,\n          pieces: [],\n          destroyedThisTick: [],\n          destroyedLastTick: [],\n          settled: false,\n        };\n\n        return new Engine(gameState, generator, moves, matchRules);\n      }\n    },\n    {\n      title: 'Doughnut',\n      description: 'Who doesn\\'t love the holiest of foods?',\n      generate: () => {\n        const gameState: State = {\n          board: {\n            0: { 2: true, 3: true, 4: true, 5: true, 6: true },\n            1: { 1: true, 2: true, 3: true, 4: true, 5: true, 6: true, 7: true },\n            2: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true, 7: true, 8: true },\n            3: { 0: true, 1: true, 2: true, 6: true, 7: true, 8: true },\n            4: { 0: true, 1: true, 2: true, 6: true, 7: true, 8: true },\n            5: { 0: true, 1: true, 2: true, 6: true, 7: true, 8: true },\n            6: { 0: true, 1: true, 2: true, 3: true, 4: true, 5: true, 6: true, 7: true, 8: true },\n            7: { 1: true, 2: true, 3: true, 4: true, 5: true, 6: true, 7: true },\n            8: { 2: true, 3: true, 4: true, 5: true, 6: true },\n          },\n          totalScore: 0,\n          score: 0,\n          multiplier: 0,\n          pieces: [],\n          destroyedThisTick: [],\n          destroyedLastTick: [],\n          settled: false,\n        };\n\n        return new Engine(gameState, generator, moves, matchRules);\n      }\n    },\n    {\n      title: 'Doughnut Hole',\n      description: 'We\\'re not going to waste any dough.',\n      generate: () => {\n        const gameState: State = {\n          board: {\n            0: { 1: true, 2: true, 3: true },\n            1: { 0: true, 1: true, 2: true, 3: true, 4: true },\n            2: { 0: true, 1: true, 2: true, 3: true, 4: true },\n            3: { 0: true, 1: true, 2: true, 3: true, 4: true },\n            4: { 1: true, 2: true, 3: true },\n          },\n          totalScore: 0,\n          score: 0,\n          multiplier: 0,\n          pieces: [],\n          destroyedThisTick: [],\n          destroyedLastTick: [],\n          settled: false,\n        };\n\n        return new Engine(gameState, generator, moves, matchRules);\n      }\n    }\n  ]\n};\n\nexport default levelPack;","import React from 'react';\nimport './LevelBrowser.scss';\nimport levelPack from './base/levelPack';\nimport LevelPack from './level/LevelPack';\nimport Level from './level';\n\ninterface LevelBrowserProps {\n  activate: (level: Level) => void;\n}\n\ninterface LevelBrowserState {\n  packs: LevelPack[];\n}\n\nexport default class LevelBrowser extends React.Component<LevelBrowserProps, LevelBrowserState> {\n  constructor(prop: any) {\n    super(prop);\n\n    this.state = {\n      packs: [levelPack],\n    };\n  }\n\n  render() {\n    const packs: JSX.Element[] = [];\n    for (const pack of this.state.packs) {\n      const levels: JSX.Element[] = [];\n      for (const level of pack.levels) {\n        levels.push(\n          <li key={`${pack.title} ${level.title}`}\n              onClick={() => this.props.activate(level)}>\n            <h3>{level.title}</h3>\n            <p>{level.description}</p>\n          </li>\n        );\n      }\n\n      packs.push(\n        <div key={pack.title} className=\"pack\">\n          <h2>{pack.title}</h2>\n          <ol>{levels}</ol>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"LevelBrowser\">\n        {packs}\n      </div>\n      );\n  }\n}\n","import React from 'react';\nimport './Piece.scss';\n\ninterface PieceProps {\n  color: string;\n  icon: string;\n  destroyed: boolean;\n  id: string;\n  scale: number;\n  selected: boolean;\n  x: number;\n  y: number;\n\n  actionDown: (event: MouseEvent | TouchEvent) => void;\n  actionMove: (event: MouseEvent | TouchEvent) => void;\n  actionUp: () => void;\n};\n\ninterface PieceState {\n  visible: boolean;\n}\n\nexport default class Piece extends React.Component<PieceProps, PieceState> {\n\n  constructor(props: PieceProps) {\n    super(props);\n\n    this.state = {\n      visible: false,\n    };\n  }\n\n  componentDidMount() {\n    window.setTimeout(() => {\n      this.setState({ visible: true });\n    }, 100);\n  }\n\n  render() {\n    const scale = this.props.scale\n    const style = {\n      color: this.props.color,\n      height: scale,\n      left: this.props.x * scale + 'px',\n      top: this.props.y * scale + 'px',\n      width: scale,\n    };\n    const icon = '#' + this.props.icon;\n    const className = ['Piece'];\n    if (!this.state.visible) {\n      className.push('hidden');\n    }\n    if (this.props.selected) {\n      className.push('selected');\n    }\n    if (this.props.destroyed) {\n      className.push('destroyed');\n    }\n\n    return <div\n        className={className.join(' ')}\n        style={style}\n        onMouseDown={(event) => this.props.actionDown(event.nativeEvent)}\n        onMouseMove={(event) => this.props.actionMove(event.nativeEvent)}\n        onMouseUp={this.props.actionUp}\n        onTouchStart={(event) => this.props.actionDown(event.nativeEvent)}\n        onTouchMove={(event) => this.props.actionMove(event.nativeEvent)}\n        onTouchEnd={this.props.actionUp}>\n      <svg width=\"64\" height=\"64\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\">\n        <use xlinkHref={icon} />\n      </svg>\n    </div>;\n  }\n}\n","import React from 'react';\nimport { forEachCell, getCell, State, Piece as GamePiece } from './engine/state';\nimport pieceTypes from './base/pieceTypes';\nimport './Board.scss';\nimport { Coordinate } from './engine/util';\nimport Piece from './Piece';\n\ninterface BoardProps {\n  gameState: State;\n  onStart: (s: Coordinate) => false;\n  onEnd: (e: Coordinate) => false;\n};\n\ninterface BoardState {\n  lastCoordinates: Coordinate | undefined;\n  scale: number;\n  translateX: number;\n  translateY: number;\n  gridWidth: number;\n  gridHeight: number;\n}\n\nconst scale = 64;\n\nexport class Board extends React.Component<BoardProps, BoardState> {\n  private boardRef: React.RefObject<HTMLDivElement>;\n  private gridRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: BoardProps) {\n    super(props);\n\n    this.boardRef = React.createRef();\n    this.gridRef = React.createRef();\n\n    let maxX = -Infinity;\n    let minX = Infinity;\n    let maxY = -Infinity;\n    let minY = Infinity;\n\n    forEachCell(this.props.gameState.board, (x, y) => {\n      maxX = Math.max(x, maxX);\n      maxY = Math.max(y, maxY);\n      minX = Math.min(x, minX);\n      minY = Math.min(y, minY);\n    });\n\n    this.state = {\n      lastCoordinates: undefined,\n      scale: scale,\n      translateX: 0,\n      translateY: 0,\n      gridWidth: (maxX - minX + 1),\n      gridHeight: (maxY - minY + 1),\n    };\n    this.onStart = this.onStart.bind(this);\n    this.onMove = this.onMove.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.onResize);\n    this.onResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  onStart(event: MouseEvent | TouchEvent) {\n    if (event instanceof MouseEvent) {\n      this.props.onStart(this.toGridSpace(event.clientX, event.clientY));\n    } else {\n      const touch = event.touches[0];\n      this.props.onStart(this.toGridSpace(touch.clientX, touch.clientY));\n    }\n  }\n\n  onMove(event: MouseEvent | TouchEvent) {\n    if (event instanceof MouseEvent) {\n      this.setState({ lastCoordinates: this.toGridSpace(event.clientX, event.clientY) });\n    } else {\n      const touch = event.touches[0];\n      this.setState({ lastCoordinates: this.toGridSpace(touch.clientX, touch.clientY) });\n    }\n  }\n\n  onEnd() {\n    if (this.state.lastCoordinates != null) {\n      this.props.onEnd(this.state.lastCoordinates);\n    }\n    this.setState({ lastCoordinates: undefined });\n  }\n\n  onResize() {\n    const rect = this.boardRef.current?.getBoundingClientRect();\n    if (rect == null) {\n      return;\n    }\n\n    const currentWidth = this.state.gridWidth * scale;\n    const currentHeight = this.state.gridHeight * scale;\n\n    const targetWidth = rect.width - 32;\n    const targetHeight = rect.height - 32;\n\n    let scaleFactor: number;\n    if (targetWidth / targetHeight > currentWidth / currentHeight) {\n      // Calculate in terms of height\n      scaleFactor = targetHeight / currentHeight;\n    } else {\n      scaleFactor = targetWidth / currentWidth;\n    }\n\n    this.setState({ scale: scaleFactor });\n  }\n\n  render() {\n    const cells: JSX.Element[] = [];\n    forEachCell(this.props.gameState.board, (x, y) => {\n      const style = {\n        left: x * scale + 'px',\n        top: y * scale + 'px',\n      };\n      const key = `${x},${y}`;\n      const className = ['Board-cell']\n      if (getCell(this.props.gameState.board, x, y - 1) == null) {\n        className.push('Board-entry');\n      }\n      cells.push(<div className={className.join(' ')} style={style} key={key}></div>);\n    });\n\n    const pieces: JSX.Element[] = [];\n    const destroyed = (x: number, y: number, piece: GamePiece) => {\n      const type = pieceTypes[piece.type];\n      pieces.push(<Piece\n        color={type.baseColor}\n        destroyed={true}\n        icon={type.icon}\n        id={piece.id}\n        key={piece.id}\n        scale={scale}\n        selected={false}\n        x={x}\n        y={y}\n\n        actionDown={() => {}}\n        actionMove={() => {}}\n        actionUp={() => {}} />);\n    };\n    forEachCell(this.props.gameState.destroyedThisTick, destroyed);\n    forEachCell(this.props.gameState.destroyedLastTick, destroyed);\n    forEachCell(this.props.gameState.pieces, (x, y, piece) => {\n      const type = pieceTypes[piece.type];\n      const selected = this.state.lastCoordinates != null\n        && this.state.lastCoordinates.x === x\n        && this.state.lastCoordinates.y === y;\n      pieces.push(<Piece\n        color={type.baseColor}\n        destroyed={false}\n        icon={type.icon}\n        id={piece.id}\n        key={piece.id}\n        scale={scale}\n        selected={selected}\n        x={x}\n        y={y}\n        \n        actionDown={this.onStart}\n        actionMove={this.onMove}\n        actionUp={this.onEnd} />);\n    });\n\n    const innerStyle = {\n      width: this.state.gridWidth * scale,\n      height: this.state.gridHeight * scale,\n    };\n\n    const transform = `scale(${this.state.scale})`;\n\n    const contextStyle = { transform: transform };\n\n    return <div className=\"Board\" ref={this.boardRef}>\n      <div className=\"context\" style={contextStyle}>\n        <div className=\"Board-grid\" ref={this.gridRef} style={innerStyle}>{cells}</div>\n        <div className=\"Board-pieces\" style={innerStyle}>{pieces}</div>\n      </div>\n    </div>\n  }\n\n  private toGridSpace(clientX: number, clientY: number): Coordinate {\n    const rect = this.gridRef.current?.getBoundingClientRect();\n    const left = rect?.left;\n    if (left == null) {\n      throw Error('Could not get left of board ref!');\n    }\n    const top = rect?.top;\n    if (top == null) {\n      throw Error('Could not get top of board ref!');\n    }\n    return {\n      x: Math.floor((clientX - left) / scale / this.state.scale),\n      y: Math.floor((clientY - top) / scale / this.state.scale),\n    };\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport './Game.scss';\nimport Board from './Board';\nimport { forEachCell, ImmutableState } from './engine/state';\nimport Engine from './engine';\nimport { Coordinate } from './engine/util';\n\ninterface GameState {\n  gameState: ImmutableState;\n  start: Coordinate | undefined;\n  totalScore: number;\n  score: number;\n  multiplier: number;\n}\n\ninterface GameProps {\n  audio: boolean;\n  engine: Engine;\n}\n\nexport default class Game extends React.Component<GameProps, GameState> {\n  private lastNumber: Map<keyof GameState, number> = new Map();\n  private aBlipRef: React.RefObject<HTMLAudioElement>;\n  private amBlipRef: React.RefObject<HTMLAudioElement>;\n  private emBlipRef: React.RefObject<HTMLAudioElement>;\n  private gmBlipRef: React.RefObject<HTMLAudioElement>;\n\n  constructor(props: GameProps) {\n    super(props);\n\n    this.aBlipRef = React.createRef();\n    this.amBlipRef = React.createRef();\n    this.emBlipRef = React.createRef();\n    this.gmBlipRef = React.createRef();\n\n    props.engine.initialize();\n\n    this.state = {\n      gameState: props.engine.state,\n      start: undefined,\n      totalScore: props.engine.state.totalScore,\n      score: props.engine.state.score,\n      multiplier: props.engine.state.multiplier,\n    };\n    this.onStart = this.onStart.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n  }\n\n  onStart(s: Coordinate): false {\n    this.setState({ start: s });\n    return false;\n  };\n\n  onEnd(e: Coordinate | undefined): false {\n    const engine = this.props.engine;\n    if (e != null && this.state.start != null && engine.state.settled) {\n      if (engine.move(this.state.start, e)) {\n        this.update(engine.tick());\n        let interval = window.setInterval(() => {;\n          this.update(engine.tick());\n          if (this.state.gameState.settled) {\n            window.clearInterval(interval);\n          }\n        }, 150);\n      }\n    }\n    this.setState({ start: undefined });\n    return false;\n  }\n\n  update(state: ImmutableState) {\n    const blips = [\n      this.aBlipRef,\n      this.amBlipRef,\n      this.emBlipRef,\n      this.gmBlipRef,\n    ];\n    if (this.props.audio) {\n      let count = 0;\n      forEachCell(state.destroyedThisTick, () => {\n        count++;\n        window.setTimeout(() => {\n          const index = Math.floor(Math.random() * blips.length);\n          const element = blips[index];\n          if (element != null && element.current != null) {\n            const audio = (element.current.cloneNode(true) as HTMLAudioElement);\n            audio.volume = 1 / count;\n            audio.play();\n          }\n        }, count * 40);\n      });\n    }\n\n    this.setState({\n      gameState: state,\n      multiplier: state.multiplier,\n    });\n    this.targetNumber('totalScore', state.totalScore, 2000);\n    if (state.score !== 0) {\n      this.targetNumber('score', state.score, 200); \n    } else {\n      this.setState({ score: 0 });\n      this.lastNumber.set('score', 0);\n    }\n  }\n\n  targetNumber(property: keyof GameState, value: number, speed: number) {\n    if (this.lastNumber.get(property) === value) {\n      return;\n    }\n\n    const startTime = new Date().getTime();\n    const startValue = this.state[property] as number;\n\n    const onFrame = () => {\n      if (this.lastNumber.get(property) !== value) {\n        return;\n      }\n\n      let t = (new Date().getTime() - startTime) / speed;\n      if (t > 1) {\n        const state: any = {};\n        state[property] = value;\n        this.setState(state);\n        return;\n      }\n      const state: any = {};\n      state[property] = Math.floor(this.easeOutCirc(t, startValue, value - startValue));\n      this.setState(state);\n      window.requestAnimationFrame(onFrame);\n    };\n    window.requestAnimationFrame(onFrame);\n\n    this.lastNumber.set(property, value);\n  }\n\n  render() {\n    return (\n      <div className=\"Game\">\n        <div className=\"header\">\n          <div className=\"score\">\n            {this.state.totalScore}\n          </div>\n          <div className=\"space\"></div>\n          <div className=\"score\">\n            {this.state.score}\n          </div>\n          <div className=\"spacer\"></div>\n          <div className=\"score\">\n            x{this.state.multiplier}\n          </div>\n        </div>\n        <Board gameState={this.state.gameState}\n            onStart={this.onStart}\n            onEnd={this.onEnd}></Board>\n        <audio ref={this.aBlipRef} src=\"aBlip.wav\" />\n        <audio ref={this.amBlipRef} src=\"amBlip.wav\" />\n        <audio ref={this.emBlipRef} src=\"emBlip.wav\" />\n        <audio ref={this.gmBlipRef} src=\"gmBlip.wav\" />\n      </div>\n      );\n  }\n\n  private easeOutCirc(t: number, start: number, delta: number) {\n    t--;\n    return delta * Math.sqrt(1 - t*t) + start;\n  };\n}\n","import React from 'react';\nimport './App.scss';\nimport BasePieces from './base/pieces';\nimport LevelBrowser from './LevelBrowser';\nimport Level from './level';\nimport Engine from './engine';\nimport Game from './Game';\n\ninterface AppState  {\n  audio: boolean;\n  gameInSession: boolean;\n  level?: Level;\n  engine?: Engine;\n}\n\nexport default class App extends React.Component<any, AppState> {\n  constructor(prop: any) {\n    super(prop);\n\n    this.state = {\n      audio: true,\n      gameInSession: false,\n    };\n\n    this.toggleAudio = this.toggleAudio.bind(this);\n    this.activateLevel = this.activateLevel.bind(this);\n    this.deactivateLevel = this.deactivateLevel.bind(this);\n  }\n\n  toggleAudio() {\n    this.setState({ audio: !this.state.audio });\n  }\n\n  activateLevel(level: Level) {\n    this.setState({\n      level: level,\n      engine: level.generate(),\n      gameInSession: true,\n    });\n  }\n\n  deactivateLevel() {\n    this.setState({ gameInSession: false });\n    window.setTimeout(() => {\n      this.setState({\n        level: undefined,\n        engine: undefined,\n      });\n    }, 400);\n  }\n\n  render() {\n    const audioClass = ['audio'];\n    if (!this.state.audio) {\n      audioClass.push('disabled');\n    }\n\n    let game: JSX.Element | undefined;\n    let back: JSX.Element | undefined;\n    const browserClass = ['browser'];\n    const gameClass = ['game'];\n    if (this.state.gameInSession) {\n      browserClass.push('hidden');\n      back = \n        <button onClick={this.deactivateLevel}>\n          Back\n        </button>;\n    } else {\n      gameClass.push('hidden');\n    }\n\n    if (this.state.level != null && this.state.engine != null) {\n      game = <Game audio={this.state.audio} engine={this.state.engine}/>;\n    }\n\n    return (\n      <div className=\"App\">\n        <header>\n          {back}\n          <div className=\"spacer\"></div>\n          <button className={audioClass.join(' ')}\n              onClick={this.toggleAudio}>\n            {this.state.audio ? 'Sound On' : 'Sound Off'}\n          </button>\n        </header>\n        <BasePieces />\n        <div className=\"wrapper\">\n          <div className={browserClass.join(' ')}>\n            <LevelBrowser activate={this.activateLevel} />\n          </div>\n          <div className={gameClass.join(' ')}>\n            {game}\n          </div>\n        </div>\n      </div>\n      );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}